<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>32</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        //w=
</value>
  </data>
</root>